{"ast":null,"code":"import { GoogleLoginProvider } from \"angularx-social-login\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"angularx-social-login\";\nimport * as i3 from \"../../authentication.service\";\nimport * as i4 from \"@angular/material/button\";\nexport class AuthenticationComponent {\n  constructor(router, socialAuthService, authenticationService) {\n    this.router = router;\n    this.socialAuthService = socialAuthService;\n    this.authenticationService = authenticationService;\n    this.message = 'Authenticate via Google to access Lanstreamer';\n  }\n  login() {\n    this.socialAuthService.signIn(GoogleLoginProvider.PROVIDER_ID).then(response => {\n      const code = this.router.url.split('/').pop();\n      if (!code) {\n        this.authenticationFailed();\n        return;\n      }\n      this.authenticationService.authenticate(code, response.email).subscribe(() => this.authenticationSucceeded(), () => this.authenticationFailed());\n    }).catch(() => this.authenticationFailed());\n  }\n  authenticationSucceeded() {\n    this.message = 'Authenticated! You can close the window.';\n  }\n  authenticationFailed() {\n    this.message = 'Authentication failed. Please try again.';\n  }\n}\nAuthenticationComponent.ɵfac = function AuthenticationComponent_Factory(t) {\n  return new (t || AuthenticationComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.SocialAuthService), i0.ɵɵdirectiveInject(i3.AuthenticationService));\n};\nAuthenticationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AuthenticationComponent,\n  selectors: [[\"app-authentication\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"message\"], [\"mat-raised-button\", \"\", 1, \"google-login-btn\", 3, \"click\"]],\n  template: function AuthenticationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function AuthenticationComponent_Template_button_click_3_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵtext(4, \" Authenticate \");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.message);\n    }\n  },\n  dependencies: [i4.MatButton],\n  styles: [\".container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  height: 100%;\\n}\\n.container[_ngcontent-%COMP%]   .message[_ngcontent-%COMP%] {\\n  font-size: 1.5em;\\n  font-weight: bold;\\n  color: #333;\\n  margin-bottom: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hdXRoZW50aWNhdGlvbi9hdXRoZW50aWNhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSxzQkFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxZQUFBO0FBQ0Y7QUFDRTtFQUNFLGdCQUFBO0VBQ0EsaUJBQUE7RUFDQSxXQUFBO0VBQ0EsbUJBQUE7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgaGVpZ2h0OiAxMDAlO1xuXG4gIC5tZXNzYWdlIHtcbiAgICBmb250LXNpemU6IDEuNWVtO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGNvbG9yOiAjMzMzO1xuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAQA,mBAAmB,QAA0B,uBAAuB;;;;;;AAQ5E,OAAM,MAAOC,uBAAuB;EAClCC,YACUC,MAAc,EACdC,iBAAoC,EACpCC,qBAA4C;IAF5C,WAAM,GAANF,MAAM;IACN,sBAAiB,GAAjBC,iBAAiB;IACjB,0BAAqB,GAArBC,qBAAqB;IAI/B,YAAO,GAAG,+CAA+C;EAFzD;EAIAC,KAAK;IACH,IAAI,CAACF,iBAAiB,CAACG,MAAM,CAACP,mBAAmB,CAACQ,WAAW,CAAC,CAC3DC,IAAI,CAAEC,QAAQ,IAAI;MACjB,MAAMC,IAAI,GAAG,IAAI,CAACR,MAAM,CAACS,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,EAAE;MAC7C,IAAI,CAACH,IAAI,EAAE;QACT,IAAI,CAACI,oBAAoB,EAAE;QAC3B;;MAEF,IAAI,CAACV,qBAAqB,CAACW,YAAY,CAACL,IAAI,EAAED,QAAQ,CAACO,KAAK,CAAC,CAC1DC,SAAS,CACR,MAAM,IAAI,CAACC,uBAAuB,EAAE,EACpC,MAAM,IAAI,CAACJ,oBAAoB,EAAE,CAClC;IACL,CAAC,CAAC,CACDK,KAAK,CAAC,MAAM,IAAI,CAACL,oBAAoB,EAAE,CAAC;EAC7C;EAEQI,uBAAuB;IAC7B,IAAI,CAACE,OAAO,GAAG,0CAA0C;EAC3D;EAEQN,oBAAoB;IAC1B,IAAI,CAACM,OAAO,GAAG,0CAA0C;EAC3D;;;mBAjCWpB,uBAAuB;AAAA;;QAAvBA,uBAAuB;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVpCC,8BAAuB;MACAA,YAAW;MAAAA,iBAAM;MACtCA,iCAAqE;MAA7DA;QAAA,OAASC,WAAO;MAAA,EAAC;MACvBD,8BACF;MAAAA,iBAAS;;;MAHYA,eAAW;MAAXA,iCAAW","names":["GoogleLoginProvider","AuthenticationComponent","constructor","router","socialAuthService","authenticationService","login","signIn","PROVIDER_ID","then","response","code","url","split","pop","authenticationFailed","authenticate","email","subscribe","authenticationSucceeded","catch","message","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/home/krzysztof/Apps/lanstreamer-code/lanstreamer-web/src/app/components/authentication/authentication.component.ts","/home/krzysztof/Apps/lanstreamer-code/lanstreamer-web/src/app/components/authentication/authentication.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {GoogleLoginProvider, SocialAuthService} from \"angularx-social-login\";\nimport {AuthenticationService} from \"../../authentication.service\";\n\n@Component({\n  selector: 'app-authentication',\n  templateUrl: './authentication.component.html',\n  styleUrls: ['./authentication.component.scss']\n})\nexport class AuthenticationComponent {\n  constructor(\n    private router: Router,\n    private socialAuthService: SocialAuthService,\n    private authenticationService: AuthenticationService,\n  ) {\n  }\n\n  message = 'Authenticate via Google to access Lanstreamer';\n\n  login(): void {\n    this.socialAuthService.signIn(GoogleLoginProvider.PROVIDER_ID)\n      .then((response) => {\n        const code = this.router.url.split('/').pop();\n        if (!code) {\n          this.authenticationFailed();\n          return;\n        }\n        this.authenticationService.authenticate(code, response.email)\n          .subscribe(\n            () => this.authenticationSucceeded(),\n            () => this.authenticationFailed()\n          );\n      })\n      .catch(() => this.authenticationFailed());\n  }\n\n  private authenticationSucceeded(): void {\n    this.message = 'Authenticated! You can close the window.'\n  }\n\n  private authenticationFailed(): void {\n    this.message = 'Authentication failed. Please try again.';\n  }\n}\n","<div class=\"container\">\n  <div class=\"message\">{{message}}</div>\n  <button (click)=\"login()\" mat-raised-button class=\"google-login-btn\">\n    Authenticate\n  </button>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}